#! /bin/sh
# path/checkIP.sh --post <true|false>

# Check the presence of the option
options=$(getopt -n $0 -o '' -l 'post:'  -- $@)
# getopt has failed
if [[ $? -ne 0 ]]
then
	exit 1
fi
# Setting the options
eval set -- $options
# Parsing the options
while true
do
	case $1 in
		--post)
			shift
			if [[ $1 != 'true' ]] && [[ $1 != 'false' ]]
			then
				echo 'Incorrect options provided'
				exit 2
			fi
			flag=$1
			;;
		--)
			shift
			break
			;;
	esac
	shift
done
# Setting the path of the output file
FILE="${HOME}/ip.txt"
# Checking if the flag is true
if [[ $flag = 'true' ]]
then
	echo 'ascii' > ftp.txt
	echo 'bell' >> ftp.txt
	echo 'case' >> ftp.txt
	echo 'trace' >> ftp.txt
	echo 'user my_user my_password' >> ftp.txt
fi
# Downloading the file
wget  --output-file=/dev/null -O $FILE 'ip4.me'
# Changing the IFS
savedIFS=$IFS
IFS=$'\n'
# Extracting the IP
for WORD in $(cat $FILE)
do
	WORD=`expr "${WORD}" : '\(.*[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*.*\)'`
	if [[ -n $WORD ]]
	then
		WORD=`expr "${WORD}" : '\(.*[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\)'`
		i=$(expr $WORD : '.*>')
		WORD=${WORD: $i}
		break
	fi
done
# Restoring the IFS
IFS=$savedIFS
# Checking if the flag is true
echo $WORD > $FILE
date >> $FILE
if [[ $flag = 'true' ]]
then
	echo "send ${FILE} ip/ip.txt" >> ftp.txt
	echo 'bye' >> ftp.txt
	ftp -ginv my_site < ftp.txt
	rm -rf ftp.txt
else
	cat $FILE
fi
# Removing the output file
rm -rf $FILE
exit 0
